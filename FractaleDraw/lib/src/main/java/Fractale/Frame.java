package Fractale;

import java.awt.event.*;
import javax.swing.*;

/**
 * Vue de l'interface graphique
 */
public final class Frame extends javax.swing.JFrame {
    /**
     * le modèle associé à la vue
     */
    private final FractaleImage fImage;
    /**
     * le controleur de la vue
     */
    private final Controller controleur;
    
    /**
     * Construit la fenêtre
     * @param fImage le modèle
     * @param controleur le controleur
     */
    public Frame(FractaleImage fImage, Controller controleur) {
        this.fImage = fImage;
        this.controleur = controleur;
        controleur.setFrame(this);
        initComponents();
        initListeners();
        initValues();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * Initialise les différents composants de la Frame et les place
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.ButtonGroup fractaleType = new javax.swing.ButtonGroup();
        javax.swing.ButtonGroup colorType = new javax.swing.ButtonGroup();
        javax.swing.JPanel parametrePanel = new javax.swing.JPanel();
        javax.swing.JPanel fonctionPanel = new javax.swing.JPanel();
        javax.swing.JLabel fonctionLabel = new javax.swing.JLabel();
        javax.swing.JLabel iterMaxLabel = new javax.swing.JLabel();
        javax.swing.JLabel pasLabel = new javax.swing.JLabel();
        javax.swing.JPanel intervallePanel = new javax.swing.JPanel();
        javax.swing.JLabel reLabel = new javax.swing.JLabel();
        javax.swing.JLabel minReLabel = new javax.swing.JLabel();
        javax.swing.JLabel maxReLabel = new javax.swing.JLabel();
        javax.swing.JLabel imLabel = new javax.swing.JLabel();
        javax.swing.JLabel minImLabel = new javax.swing.JLabel();
        javax.swing.JLabel maxImLabel = new javax.swing.JLabel();
        javax.swing.JPanel dimensionPanel = new javax.swing.JPanel();
        javax.swing.JLabel longueurLabel = new javax.swing.JLabel();
        javax.swing.JLabel largeurLabel = new javax.swing.JLabel();
        javax.swing.JPanel couleursPanel = new javax.swing.JPanel();
        javax.swing.JLabel divergentLabel = new javax.swing.JLabel();
        javax.swing.JLabel rgbRLabel = new javax.swing.JLabel();
        javax.swing.JLabel rgbGLabel = new javax.swing.JLabel();
        javax.swing.JLabel rgbBLabel = new javax.swing.JLabel();
        javax.swing.JLabel hsbHLabel = new javax.swing.JLabel();
        javax.swing.JLabel hsbSLabel = new javax.swing.JLabel();
        javax.swing.JLabel hsbBLabel = new javax.swing.JLabel();
        javax.swing.JPanel outilsPanel = new javax.swing.JPanel();
        javax.swing.JPanel deplacementPanel = new javax.swing.JPanel();
        javax.swing.JPanel zoomPanel = new javax.swing.JPanel();
        javax.swing.JPanel buttonPanel = new javax.swing.JPanel();
        javax.swing.JPanel buttonCenterPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fractale");
        setResizable(false);

        imagePanel.setMaximumSize(new java.awt.Dimension(800, 800));
        imagePanel.setMinimumSize(new java.awt.Dimension(800, 800));
        imagePanel.setPreferredSize(new java.awt.Dimension(800, 800));

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );

        parametrePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        parametrePanel.setMaximumSize(null);

        fonctionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fonction", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 11))); // NOI18N

        fractaleType.add(mandelbrot);
        mandelbrot.setText("Mandelbrot");
        mandelbrot.setToolTipText("");

        fractaleType.add(julia);
        julia.setText("Julia");

        fonctionLabel.setText("Fonction");

        fonction.setMaximumSize(new java.awt.Dimension(150, 20));
        fonction.setMinimumSize(new java.awt.Dimension(150, 20));
        fonction.setPreferredSize(new java.awt.Dimension(150, 20));

        iterMaxLabel.setText("Itération max");

        maxIter.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        maxIter.setMaximumSize(new java.awt.Dimension(90, 20));
        maxIter.setMinimumSize(new java.awt.Dimension(90, 20));
        maxIter.setPreferredSize(new java.awt.Dimension(90, 20));

        pasLabel.setText("Pas de discrétisation");

        pas.setMaximumSize(new java.awt.Dimension(100, 20));
        pas.setMinimumSize(new java.awt.Dimension(100, 20));
        pas.setPreferredSize(new java.awt.Dimension(100, 20));

        javax.swing.GroupLayout fonctionPanelLayout = new javax.swing.GroupLayout(fonctionPanel);
        fonctionPanel.setLayout(fonctionPanelLayout);
        fonctionPanelLayout.setHorizontalGroup(
            fonctionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fonctionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fonctionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fonctionPanelLayout.createSequentialGroup()
                        .addGroup(fonctionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(fonctionPanelLayout.createSequentialGroup()
                                .addComponent(julia)
                                .addGap(18, 18, 18)
                                .addComponent(fonctionLabel))
                            .addComponent(mandelbrot))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fonction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(fonctionPanelLayout.createSequentialGroup()
                        .addGroup(fonctionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(fonctionPanelLayout.createSequentialGroup()
                                .addComponent(iterMaxLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(maxIter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(fonctionPanelLayout.createSequentialGroup()
                                .addComponent(pasLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        fonctionPanelLayout.setVerticalGroup(
            fonctionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fonctionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mandelbrot)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fonctionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(julia)
                    .addComponent(fonctionLabel)
                    .addComponent(fonction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fonctionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iterMaxLabel)
                    .addComponent(maxIter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(fonctionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pasLabel)
                    .addComponent(pas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        intervallePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Plan complexe", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 11))); // NOI18N

        reLabel.setText("Re :");

        minReLabel.setText("min");

        minRe.setMaximumSize(new java.awt.Dimension(125, 20));
        minRe.setMinimumSize(new java.awt.Dimension(125, 20));
        minRe.setPreferredSize(new java.awt.Dimension(125, 20));

        maxReLabel.setText("max");

        maxRe.setMaximumSize(new java.awt.Dimension(125, 20));
        maxRe.setMinimumSize(new java.awt.Dimension(125, 20));
        maxRe.setPreferredSize(new java.awt.Dimension(125, 20));

        imLabel.setText("Im :");

        minImLabel.setText("min");

        minIm.setMaximumSize(new java.awt.Dimension(125, 20));
        minIm.setMinimumSize(new java.awt.Dimension(125, 20));
        minIm.setPreferredSize(new java.awt.Dimension(125, 20));

        maxImLabel.setText("max");

        maxIm.setMaximumSize(new java.awt.Dimension(125, 20));
        maxIm.setMinimumSize(new java.awt.Dimension(125, 20));
        maxIm.setPreferredSize(new java.awt.Dimension(125, 20));

        javax.swing.GroupLayout intervallePanelLayout = new javax.swing.GroupLayout(intervallePanel);
        intervallePanel.setLayout(intervallePanelLayout);
        intervallePanelLayout.setHorizontalGroup(
            intervallePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(intervallePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(intervallePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(intervallePanelLayout.createSequentialGroup()
                        .addComponent(reLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minReLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minRe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maxReLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maxRe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(intervallePanelLayout.createSequentialGroup()
                        .addComponent(imLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minImLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minIm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maxImLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(maxIm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        intervallePanelLayout.setVerticalGroup(
            intervallePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(intervallePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(intervallePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reLabel)
                    .addComponent(minReLabel)
                    .addComponent(maxReLabel)
                    .addComponent(minRe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxRe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(intervallePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imLabel)
                    .addComponent(minImLabel)
                    .addComponent(maxImLabel)
                    .addComponent(minIm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxIm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dimensionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dimension", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 11))); // NOI18N

        longueurLabel.setText("Longueur");

        longueur.setModel(new javax.swing.SpinnerNumberModel(1, 1, 800, 1));
        longueur.setMaximumSize(new java.awt.Dimension(75, 20));
        longueur.setMinimumSize(new java.awt.Dimension(75, 20));
        longueur.setPreferredSize(new java.awt.Dimension(75, 20));

        largeurLabel.setText("Largeur");

        largeur.setModel(new javax.swing.SpinnerNumberModel(1, 1, 800, 1));
        largeur.setMaximumSize(new java.awt.Dimension(75, 20));
        largeur.setMinimumSize(new java.awt.Dimension(75, 20));
        largeur.setPreferredSize(new java.awt.Dimension(75, 20));

        javax.swing.GroupLayout dimensionPanelLayout = new javax.swing.GroupLayout(dimensionPanel);
        dimensionPanel.setLayout(dimensionPanelLayout);
        dimensionPanelLayout.setHorizontalGroup(
            dimensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dimensionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(longueurLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(longueur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(largeurLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(largeur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dimensionPanelLayout.setVerticalGroup(
            dimensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dimensionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dimensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(longueurLabel)
                    .addComponent(longueur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(largeurLabel)
                    .addComponent(largeur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        couleursPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Couleurs", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 11))); // NOI18N

        couleurConvergent.setText("Points convergent (en héxadécimal)");

        try {
            couleur.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("HHHHHH")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        couleur.setMaximumSize(new java.awt.Dimension(100, 20));
        couleur.setMinimumSize(new java.awt.Dimension(100, 20));
        couleur.setPreferredSize(new java.awt.Dimension(100, 20));

        divergentLabel.setText("Points divergents");

        colorType.add(rgb);
        rgb.setText("RGB");

        rgbRLabel.setText("R");

        rgbR.setModel(new javax.swing.SpinnerNumberModel(0, -1, 255, 1));
        rgbR.setMaximumSize(new java.awt.Dimension(50, 20));
        rgbR.setMinimumSize(new java.awt.Dimension(50, 20));
        rgbR.setPreferredSize(new java.awt.Dimension(50, 20));

        rgbGLabel.setText("G");

        rgbG.setModel(new javax.swing.SpinnerNumberModel(0, -1, 255, 1));
        rgbG.setMaximumSize(new java.awt.Dimension(50, 20));
        rgbG.setMinimumSize(new java.awt.Dimension(50, 20));
        rgbG.setPreferredSize(new java.awt.Dimension(50, 20));

        rgbBLabel.setText("B");

        rgbB.setModel(new javax.swing.SpinnerNumberModel(0, -1, 255, 1));
        rgbB.setMaximumSize(new java.awt.Dimension(50, 20));
        rgbB.setMinimumSize(new java.awt.Dimension(50, 20));
        rgbB.setPreferredSize(new java.awt.Dimension(50, 20));

        colorType.add(hsb);
        hsb.setText("HSB");

        hsbHLabel.setText("H");

        hsbH.setModel(new javax.swing.SpinnerNumberModel(0, -1, 255, 1));
        hsbH.setMaximumSize(new java.awt.Dimension(50, 20));
        hsbH.setMinimumSize(new java.awt.Dimension(50, 20));
        hsbH.setPreferredSize(new java.awt.Dimension(50, 20));

        hsbSLabel.setText("S");

        hsbS.setModel(new javax.swing.SpinnerNumberModel(0, -1, 255, 1));
        hsbS.setMaximumSize(new java.awt.Dimension(50, 20));
        hsbS.setMinimumSize(new java.awt.Dimension(50, 20));
        hsbS.setPreferredSize(new java.awt.Dimension(50, 20));

        hsbBLabel.setText("B");

        hsbB.setModel(new javax.swing.SpinnerNumberModel(0, -1, 255, 1));
        hsbB.setMaximumSize(new java.awt.Dimension(50, 20));
        hsbB.setMinimumSize(new java.awt.Dimension(50, 20));
        hsbB.setPreferredSize(new java.awt.Dimension(50, 20));

        jLabel1.setText("(-1 si proportionelle à l'indice de divergence)");

        javax.swing.GroupLayout couleursPanelLayout = new javax.swing.GroupLayout(couleursPanel);
        couleursPanel.setLayout(couleursPanelLayout);
        couleursPanelLayout.setHorizontalGroup(
            couleursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(couleursPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(couleursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(couleursPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1))
                    .addGroup(couleursPanelLayout.createSequentialGroup()
                        .addComponent(hsb)
                        .addGap(18, 18, 18)
                        .addComponent(hsbHLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hsbH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hsbSLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hsbS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hsbBLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hsbB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(couleursPanelLayout.createSequentialGroup()
                        .addComponent(rgb)
                        .addGap(18, 18, 18)
                        .addComponent(rgbRLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rgbR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rgbGLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rgbG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rgbBLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rgbB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(divergentLabel)
                    .addGroup(couleursPanelLayout.createSequentialGroup()
                        .addComponent(couleurConvergent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(couleur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        couleursPanelLayout.setVerticalGroup(
            couleursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(couleursPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(couleursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(couleurConvergent)
                    .addComponent(couleur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(divergentLabel)
                .addGap(0, 0, 0)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(couleursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rgb)
                    .addComponent(rgbRLabel)
                    .addComponent(rgbR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rgbGLabel)
                    .addComponent(rgbBLabel)
                    .addComponent(rgbB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rgbG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(couleursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hsb)
                    .addComponent(hsbHLabel)
                    .addComponent(hsbH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hsbSLabel)
                    .addComponent(hsbS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hsbBLabel)
                    .addComponent(hsbB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        outilsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Outils", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 11))); // NOI18N
        outilsPanel.setLayout(new java.awt.GridBagLayout());

        haut.setText("↑");

        bas.setText("↓");

        gauche.setText("←");

        droite.setText("→");

        deplace.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        deplace.setMaximumSize(new java.awt.Dimension(75, 20));
        deplace.setMinimumSize(new java.awt.Dimension(75, 20));
        deplace.setPreferredSize(new java.awt.Dimension(75, 20));

        javax.swing.GroupLayout deplacementPanelLayout = new javax.swing.GroupLayout(deplacementPanel);
        deplacementPanel.setLayout(deplacementPanelLayout);
        deplacementPanelLayout.setHorizontalGroup(
            deplacementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deplacementPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deplacementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deplacementPanelLayout.createSequentialGroup()
                        .addComponent(haut)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gauche)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(droite)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(deplacementPanelLayout.createSequentialGroup()
                        .addComponent(bas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deplace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        deplacementPanelLayout.setVerticalGroup(
            deplacementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deplacementPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deplacementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(haut)
                    .addComponent(gauche)
                    .addComponent(droite))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(deplacementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bas)
                    .addComponent(deplace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        outilsPanel.add(deplacementPanel, new java.awt.GridBagConstraints());

        moins.setText("–");

        plus.setText("+");

        zoom.setText("0");

        javax.swing.GroupLayout zoomPanelLayout = new javax.swing.GroupLayout(zoomPanel);
        zoomPanel.setLayout(zoomPanelLayout);
        zoomPanelLayout.setHorizontalGroup(
            zoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(zoomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(zoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(zoom)
                    .addGroup(zoomPanelLayout.createSequentialGroup()
                        .addComponent(moins)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(plus)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        zoomPanelLayout.setVerticalGroup(
            zoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(zoomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(zoomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(moins)
                    .addComponent(plus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(zoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        outilsPanel.add(zoomPanel, new java.awt.GridBagConstraints());

        buttonPanel.setLayout(new java.awt.GridBagLayout());

        afficher.setText("Afficher");
        afficher.setMaximumSize(new java.awt.Dimension(130, 23));
        afficher.setMinimumSize(new java.awt.Dimension(130, 23));
        afficher.setPreferredSize(new java.awt.Dimension(130, 23));

        sauvegarder.setText("Sauvegarder");
        sauvegarder.setMaximumSize(new java.awt.Dimension(130, 23));
        sauvegarder.setMinimumSize(new java.awt.Dimension(130, 23));
        sauvegarder.setPreferredSize(new java.awt.Dimension(130, 23));

        defaut.setText("Défaut");
        defaut.setMaximumSize(new java.awt.Dimension(130, 23));
        defaut.setMinimumSize(new java.awt.Dimension(130, 23));
        defaut.setPreferredSize(new java.awt.Dimension(130, 23));

        annuler.setText("Annuler");
        annuler.setMaximumSize(new java.awt.Dimension(130, 23));
        annuler.setMinimumSize(new java.awt.Dimension(130, 23));
        annuler.setPreferredSize(new java.awt.Dimension(130, 23));

        javax.swing.GroupLayout buttonCenterPanelLayout = new javax.swing.GroupLayout(buttonCenterPanel);
        buttonCenterPanel.setLayout(buttonCenterPanelLayout);
        buttonCenterPanelLayout.setHorizontalGroup(
            buttonCenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonCenterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonCenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonCenterPanelLayout.createSequentialGroup()
                        .addComponent(defaut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(annuler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(buttonCenterPanelLayout.createSequentialGroup()
                        .addComponent(afficher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sauvegarder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        buttonCenterPanelLayout.setVerticalGroup(
            buttonCenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonCenterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonCenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(afficher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sauvegarder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(buttonCenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(defaut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(annuler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        buttonPanel.add(buttonCenterPanel, new java.awt.GridBagConstraints());

        javax.swing.GroupLayout parametrePanelLayout = new javax.swing.GroupLayout(parametrePanel);
        parametrePanel.setLayout(parametrePanelLayout);
        parametrePanelLayout.setHorizontalGroup(
            parametrePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parametrePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(parametrePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fonctionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dimensionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(outilsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(intervallePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(couleursPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        parametrePanelLayout.setVerticalGroup(
            parametrePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parametrePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fonctionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(intervallePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dimensionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(couleursPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(outilsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(parametrePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(parametrePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     *initialise les valeurs des differents composants selon un modele par defaut
     */
    public void initValues(){
        Fractale fractale = fImage.getFractale();
        if (fractale instanceof Mandelbrot){
            mandelbrot.setSelected(true);
            fonction.setText("");
        }
        else {
            julia.setSelected(true);
            fonction.setText(((Julia) fractale).getFonction());
        }
        
        Configuration config = fImage.getConfiguration();
        maxIter.setValue(config.getMaxIter());
        pas.setText(config.getPas()+"");
        minRe.setText(config.getMinRe()+"");
        maxRe.setText(config.getMaxRe()+"");
        minIm.setText(config.getMinIm()+"");
        maxIm.setText(config.getMaxIm()+"");
        longueur.setValue(config.getLongueur());
        largeur.setValue(config.getLargeur());
        if (config.getConvergentColor() != -1){
            couleurConvergent.setSelected(true);
            String text = Integer.toHexString(config.getConvergentColor());
            text = "0".repeat(6 - text.length()) + text;
            couleur.setText(text);
        }
        else{
            couleur.setText("000000");
            couleurConvergent.setSelected(false);
        }
        
        ColorFunction color = config.getColor();
        if (color.isRGB()){
            rgb.setSelected(true);
            rgbR.setValue(color.getV1());
            rgbG.setValue(color.getV2());
            rgbB.setValue(color.getV3());
            hsbH.setValue(0);
            hsbS.setValue(0);
            hsbB.setValue(0);
        }
        else {
            hsb.setSelected(true);
            rgbR.setValue(0);
            rgbG.setValue(0);
            rgbB.setValue(0);
            hsbH.setValue(color.getV1());
            hsbS.setValue(color.getV2());
            hsbB.setValue(color.getV3());
        }
        deplace.setValue(1);
        zoom.setText("1");
    }

    /**
     * Initialise les listeners des differents composants
     */
    private void initListeners(){
    	// la fenetre récupère le focus si on ne clique pas sur un composant
        addMouseListener(new MouseAdapter(){
            /**
             * @param e
             * effectue une action selon un MouseEvent
             */
            @Override
            public void mousePressed(MouseEvent e){
                requestFocusInWindow();
            }
        });
        
        addActionAndFocusListener(fonction, () -> {
            if (!controleur.testFonction(fonction.getText())){
                fonction.setText("");
            }
        });
        
        addActionAndFocusListener(pas, () -> {
            controleur.setPas(pas.getText());
        });
        
        addActionAndFocusListener(minRe, () -> {
            controleur.setMinRe(minRe.getText());
        });
        
        addActionAndFocusListener(maxRe, () -> {
            controleur.setMaxRe(maxRe.getText());
        });
        
        addActionAndFocusListener(minIm, () -> {
            controleur.setMinIm(minIm.getText());
        });
        
        addActionAndFocusListener(maxIm, () -> {
            controleur.setMaxIm(maxIm.getText());
        });
        
        longueur.addChangeListener(evt -> {
            controleur.setLongueur((Integer) longueur.getValue());
        });        
        
        largeur.addChangeListener(evt -> {
            controleur.setLargeur((Integer) largeur.getValue());
        });
        
        haut.addActionListener(evt -> {
            controleur.deplace(0, (Integer) deplace.getValue());
        });
        
        bas.addActionListener(evt -> {
            controleur.deplace(1,  (Integer) deplace.getValue());
        });
                
        gauche.addActionListener(evt -> {
            controleur.deplace(2, (Integer) deplace.getValue());
        });
        
        droite.addActionListener(evt -> {
            controleur.deplace(3, (Integer) deplace.getValue());
        });
        
        moins.addActionListener(evt -> {
            controleur.zoom(false, zoom.getText());
        });
        
        plus.addActionListener(evt -> {
            controleur.zoom(true, zoom.getText());
        });
        
        afficher.addActionListener(evt -> {
            boolean r = rgb.isSelected();
            int v1,v2,v3;
            if (r){
                v1 = (Integer) rgbR.getValue();
                v2 = (Integer) rgbG.getValue();
                v3 = (Integer) rgbB.getValue();
            }
            else {
                v1 = (Integer) hsbH.getValue();
                v2 = (Integer) hsbS.getValue();
                v3 = (Integer) hsbB.getValue();
            }

            controleur.affiche(mandelbrot.isSelected(),
                    fonction.getText(),
                    (Integer) maxIter.getValue(),
                    couleurConvergent.isSelected()? couleur.getText() : null,
                    r, v1, v2, v3
            );
        });
        
        sauvegarder.addActionListener(evt -> {
            controleur.sauvegarde();
        });
        
        defaut.addActionListener(evt -> {
            controleur.defaut();
        });
        
        annuler.addActionListener(evt -> {
            controleur.annule();
        });
        
    }

    /**
     * Interface fonctionnel d'une fonction qui ne prend par d'argument et ne renvoie rien
     */
    @FunctionalInterface
    private static interface Action {
        public void invoke();
    }

    /**
     * Ajoute un ActionListener est un FocusListener au composant textfield
     * @param textfield le composant
     * @param action l'action
     */
    private void addActionAndFocusListener(JTextField textfield, Action action){
        textfield.addActionListener(evt -> {
            action.invoke();
        });
        textfield.addFocusListener(new FocusAdapter(){
            @Override
            public void focusLost(FocusEvent evt){
                action.invoke();
           }
        });
    }

    /**
     * Met à jour le texte du composant pas
     */
    public void updatePas(){
        this.pas.setText(fImage.getConfiguration().getPas()+"");
    }

    /**
     * Met à jour le texte du composant minRe
     */
    public void updateMinRe(){
        this.minRe.setText(fImage.getConfiguration().getMinRe()+"");
    }

    /**
     * Met à jour le texte du composant maxRe
     */
    public void updateMaxRe(){
        this.maxRe.setText(fImage.getConfiguration().getMaxRe()+"");
    }

    /**
     * Met à jour le texte du composant minIm
     */
    public void updateMinIm(){
        this.minIm.setText(fImage.getConfiguration().getMinIm()+"");
    }

    /**
     * Met à jour le texte du composant maxIm
     */
    public void updateMaxIm(){
        this.maxIm.setText(fImage.getConfiguration().getMaxIm()+"");
    }

    /**
     * Affiche l'image de la fractale correspondant au valeur des differents composant dans le panel imagePanel
     */
    public void affiche(){
        this.repaint();
        imagePanel.setImage(fImage.getImage());
        imagePanel.repaint();
    }

    /**
     * Button qui est associé à l'action d'affichage de l'image de fImage
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final javax.swing.JButton afficher = new javax.swing.JButton();
    private final javax.swing.JButton annuler = new javax.swing.JButton();
    private final javax.swing.JButton bas = new javax.swing.JButton();
    private final javax.swing.JFormattedTextField couleur = new javax.swing.JFormattedTextField();
    private final javax.swing.JCheckBox couleurConvergent = new javax.swing.JCheckBox();
    private final javax.swing.JButton defaut = new javax.swing.JButton();
    private final javax.swing.JSpinner deplace = new javax.swing.JSpinner();
    private final javax.swing.JButton droite = new javax.swing.JButton();
    private final javax.swing.JTextField fonction = new javax.swing.JTextField();
    private final javax.swing.JButton gauche = new javax.swing.JButton();
    private final javax.swing.JButton haut = new javax.swing.JButton();
    private final javax.swing.JRadioButton hsb = new javax.swing.JRadioButton();
    private final javax.swing.JSpinner hsbB = new javax.swing.JSpinner();
    private final javax.swing.JSpinner hsbH = new javax.swing.JSpinner();
    private final javax.swing.JSpinner hsbS = new javax.swing.JSpinner();
    private final ImagePanel imagePanel = new ImagePanel();
    private final javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
    private final javax.swing.JRadioButton julia = new javax.swing.JRadioButton();
    private final javax.swing.JSpinner largeur = new javax.swing.JSpinner();
    private final javax.swing.JSpinner longueur = new javax.swing.JSpinner();
    private final javax.swing.JRadioButton mandelbrot = new javax.swing.JRadioButton();
    private final javax.swing.JTextField maxIm = new javax.swing.JTextField();
    private final javax.swing.JSpinner maxIter = new javax.swing.JSpinner();
    private final javax.swing.JTextField maxRe = new javax.swing.JTextField();
    private final javax.swing.JTextField minIm = new javax.swing.JTextField();
    private final javax.swing.JTextField minRe = new javax.swing.JTextField();
    private final javax.swing.JButton moins = new javax.swing.JButton();
    private final javax.swing.JTextField pas = new javax.swing.JTextField();
    private final javax.swing.JButton plus = new javax.swing.JButton();
    private final javax.swing.JRadioButton rgb = new javax.swing.JRadioButton();
    private final javax.swing.JSpinner rgbB = new javax.swing.JSpinner();
    private final javax.swing.JSpinner rgbG = new javax.swing.JSpinner();
    private final javax.swing.JSpinner rgbR = new javax.swing.JSpinner();
    private final javax.swing.JButton sauvegarder = new javax.swing.JButton();
    private final javax.swing.JTextField zoom = new javax.swing.JTextField();
    // End of variables declaration//GEN-END:variables
}
